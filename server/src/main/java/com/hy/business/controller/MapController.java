package com.hy.business.controller;

import com.hy.business.backentity.Role;
import com.hy.business.context.Contexts;
import com.hy.business.annotation.NettyController;
import com.hy.business.annotation.NettyMethod;
import com.hy.business.entity.Board;
import com.hy.business.utils.Core;
import com.hy.business.utils.RolePackageBytes;
import io.netty.buffer.ByteBuf;
import io.netty.channel.ChannelHandlerContext;
import io.netty.util.internal.StringUtil;
import org.springframework.stereotype.Component;

import java.io.IOException;
import java.util.List;

@NettyController
@Component
public class MapController extends BaseController {

    @NettyMethod(value = {"2-1"})
    public byte[] AAA(ChannelHandlerContext ctx, ByteBuf o) throws IOException {
        Role r = ctx.channel().attr(Contexts.ATTR_ROLE_KEY).get();


        getNearRoles(r);//可能还是有些问题呀？
        r.setIsOnline(true);//set i am online
        //Contexts.channelGroup.writeAndFlush(Converts.packageByte(what));
        //Core.SendToNearRole(what,r);//将我发给周边所有玩家？

//        ctx.channel().writeAndFlush(StringUtil.decodeHexDump(("F4 44 0D 06 03 0A   01 E1 F5 05   01 22 03 ")));
        ctx.channel().writeAndFlush(
                StringUtil.decodeHexDump(("" +
//                "F4 44 4F 04 03 01 00   01 E1 F5 05   E8 17 88 38 00 01 07 04 00 04 DE 2E 2E F2 A6 61 16 F6 00 00 46 71 00 00 00 00 00 00 10 00 03 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 F5 B3 48 01 34 01 10 00 9B 39 00 00 34 12 00 68 1A 67 38 00 A0 09 02 00 00 00 00 00 C2 39 00 00 6A 12 00 E2 18 8E 3B 00 10 FE 02 00 00 00 00 00 FD 39 00 00 AD 12 00 C9 1A C8 3B 00 20 C5 02 00 00 00 00 00 0B 3A 00 00 BF 12 00 87 1B 77 38 00 FC 4E 02 00 00 00 00 00 BC 39 00 00 5F 12 00 A9 1B 88 39 00 00 00 01 00 00 00 00 00 B1 39 00 00 4E 12 00 A8 1A D7 37 00 20 0F 02 00 00 00 00 00 EB 39 00 00 96 12 00 34 1A B7 33 00 20 40 02 00 00 00 00 00 16 3A 00 00 CA 12 00 C8 1B 37 38 00 F8 F8 02 00 00 00 00 00 9F 39 00 00 38 12 00 F8 1E 97 36 00 48 52 02 00 00 00 00 00 A0 39 00 00 39 12 00 58 1F 07 36 00 F8 56 02 00 00 00 00 00 A1 39 00 00 3A 12 00 58 20 07 36 00 00 71 02 00 00 00 00 00 A2 39 00 00 3B 12 00 98 1C C7 37 00 18 31 02 00 00 00 00 00 A3 39 00 00 3C 12 00 D8 1E C7 35 00 68 55 02 00 00 00 00 00 A4 39 00 00 3D 12 00 B8 20 E7 36 00 30 69 02 00 00 00 00 00 A5 39 00 00 3E 12 00 B8 1F 17 37 00 20 61 02 00 00 00 00 00 FF 39 00 00 AF 12 00 E9 1D E8 38 00 C4 40 02 00 00 00 00 00 " +
                "F4 44 1B 34 01 01 00 68 39 00 00 FF 11 01 C0 1C B0 38 00 00 00 02 00 00 00 00 00 " +
                "F4 44 07 05 01 01 1C " +
                //下面是人造空间
                "F4 44 2F 16 03 01 80 1B 12 06 01 04 BA EC B3 BE 00 00 00 00 00 00 00 00 00 00 00 00 68 29 58 2C 00 00 00 00 27 23 00 0F 00 06 00 05 00 00 01 " +
                "F4 44 07 05 01 31 00 " +
                "F4 44 E6 08 11 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
                "F4 44 19 3F 07 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
                "F4 44 69 40 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
                "F4 44 35 40 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
                "F4 44 06 38 13 00 " +
                "F4 44 06 38 16 00 " +
                "F4 44 08 16 25 00 00 00 " +
                "F4 44 07 05 01 3E 00 " +
                "F4 44 07 16 12 1E 00").replace(" ","")));
        for (Board board : Contexts.boardLists) {
            byte[] boardB = board.getContentB();//System board
            Core.SendToMe(r,boardB);
        }
        return null;
        //Converts.packageByte(StringUtil.decodeHexDump("06 01 02 7D 2C 14 06 18 B9 FB D4 B0 D0 C7 55 C7 F8 20 CB AD D7 E9 CE D2 B0 A1 2C D0 BB D0 BB 20 00".replace(" ","")));
//        return Package(
//                StringUtil.decodeHexDump("F4 44 0D 06 03 0A 1B 9D 11 06 01 22 03 F4 44 97 04 03 02 00 1B 9D 11 06 E8 17 A8 37 00 01 07 04 00 04 DE 2E 2E F2 A6 61 16 F6 00 00 46 71 00 00 00 00 00 00 10 00 03 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 05 F5 0C 12 78 1B D7 38 00 01 00 02 00 00 FC 2A 2E F2 A6 61 16 F6 00 00 46 71 00 00 00 00 00 00 10 00 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 F5 B3 70 01 34 01 12 00 B1 39 00 00 4E 12 00 A8 1A D7 37 00 20 0F 02 00 00 00 00 00 EB 39 00 00 96 12 00 34 1A B7 33 00 20 40 02 00 00 00 00 00 16 3A 00 00 CA 12 00 C8 1B 37 38 00 F8 F8 02 00 00 00 00 00 55 39 00 00 EA 11 00 C9 18 48 31 00 E0 D0 02 00 00 00 00 00 9B 39 00 00 34 12 00 68 1A 67 38 00 A0 09 02 00 00 00 00 00 BC 39 00 00 5F 12 00 A9 1B 88 39 00 00 00 01 00 00 00 00 00 C2 39 00 00 6A 12 00 E2 18 8E 3B 00 10 FE 02 00 00 00 00 00 FD 39 00 00 AD 12 00 C9 1A C8 3B 00 20 C5 02 00 00 00 00 00 0B 3A 00 00 BF 12 00 87 1B 77 38 00 FC 4E 02 00 00 00 00 00 EC 39 00 00 97 12 00 3D 1F C0 32 00 C0 44 02 00 00 00 00 00 9F 39 00 00 38 12 00 F8 1E 97 36 00 48 52 02 00 00 00 00 00 A0 39 00 00 39 12 00 58 1F 07 36 00 F8 56 02 00 00 00 00 00 A1 39 00 00 3A 12 00 58 20 07 36 00 00 71 02 00 00 00 00 00 A2 39 00 00 3B 12 00 98 1C C7 37 00 18 31 02 00 00 00 00 00 A3 39 00 00 3C 12 00 D8 1E C7 35 00 68 55 02 00 00 00 00 00 A4 39 00 00 3D 12 00 B8 20 E7 36 00 30 69 02 00 00 00 00 00 A5 39 00 00 3E 12 00 B8 1F 17 37 00 20 61 02 00 00 00 00 00 FF 39 00 00 AF 12 00 E9 1D E8 38 00 C4 40 02 00 00 00 00 00 F4 44 1B 34 01 01 00 68 39 00 00 FF 11 01 C0 1C B0 38 00 00 00 02 00 00 00 00 00 F4 44 07 05 01 01 1C F4 44 58 16 03 02 4B 6C 17 06 01 0A B4 BA B7 E7 C2 A5 C0 B4 D1 BD 00 00 00 00 00 00 58 2C 68 30 00 00 00 00 27 23 00 0F 00 04 00 0D 00 00 01 18 79 1F 06 01 05 48 4F 4D 45 31 00 00 00 00 00 00 00 00 00 00 00 48 0A C8 35 00 00 00 00 27 23 00 0F 00 02 00 05 00 00 00 F4 44 07 05 01 31 00 F4 44 E6 08 11 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 F4 44 19 3F 07 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 F4 44 69 40 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 F4 44 35 40 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 F4 44 06 38 13 00 F4 44 06 38 16 00 F4 44 08 16 25 00 00 00 F4 44 07 05 01 3E 00 F4 44 07 16 12 1E 00".replace(" ","")),
//                StringUtil.decodeHexDump("01 0A 8D 95 1A 06".replace(" ","")),
//                StringUtil.decodeHexDump("06 01 02 7D 2C 14 06 18 B9 FB D4 B0 D0 C7 55 C7 F8 20 CB AD D7 E9 CE D2 B0 A1 2C D0 BB D0 BB 20 00".replace(" ",""))
//        );
    }

    /*
    * 获取我附近的玩家哦
    * */
    private void getNearRoles(Role r) throws IOException {

        List<Role> list = Core.GetNearMeRolesNotMe(r);
        for (Role role : list) {
            Core.SendToMe(r, RolePackageBytes.packageStyle(role,false));
            //tmp.write(StringUtil.decodeHexDump(("00 01 07 04 00 04     CD 27    2E F2 A6 61 16 F6 00 00 46 71 00 00 00 00 00 00    97 06    03 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ").replace(" ","")));
            //"F5 B3 48 01 34 01 10 00 9B 39 00 00 34 12 00 68 1A 67 38 00 A0 09 02 00 00 00 00 00 C2 39 00 00 6A 12 00 E2 18 8E 3B 00 10 FE 02 00 00 00 00 00 FD 39 00 00 AD 12 00 C9 1A C8 3B 00 20 C5 02 00 00 00 00 00 0B 3A 00 00 BF 12 00 87 1B 77 38 00 FC 4E 02 00 00 00 00 00 BC 39 00 00 5F 12 00 A9 1B 88 39 00 00 00 01 00 00 00 00 00 B1 39 00 00 4E 12 00 A8 1A D7 37 00 20 0F 02 00 00 00 00 00 EB 39 00 00 96 12 00 34 1A B7 33 00 20 40 02 00 00 00 00 00 16 3A 00 00 CA 12 00 C8 1B 37 38 00 F8 F8 02 00 00 00 00 00 9F 39 00 00 38 12 00 F8 1E 97 36 00 48 52 02 00 00 00 00 00 A0 39 00 00 39 12 00 58 1F 07 36 00 F8 56 02 00 00 00 00 00 A1 39 00 00 3A 12 00 58 20 07 36 00 00 71 02 00 00 00 00 00 A2 39 00 00 3B 12 00 98 1C C7 37 00 18 31 02 00 00 00 00 00 A3 39 00 00 3C 12 00 D8 1E C7 35 00 68 55 02 00 00 00 00 00 A4 39 00 00 3D 12 00 B8 20 E7 36 00 30 69 02 00 00 00 00 00 A5 39 00 00 3E 12 00 B8 1F 17 37 00 20 61 02 00 00 00 00 00 FF 39 00 00 AF 12 00 E9 1D E8 38 00 C4 40 02 00 00 00 00 00"
            //上面这是啥不知道呢？
            //F4 44 4E 04 01 87 2C F4 0B 48 18 97 38 00 01 06 04 00 07 00 00 00 00 00 00 68 EA 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 4A 00 00 00 00 00
        }
        //04 03 01 00   01 E1 F5 05   E8 17 88 38  00 01 07 04 00 04 DE 2E 2E F2 A6 61 16 F6 00 00 46 71 00 00 00 00 00 00 10 00 03 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 F5 B3 48 01 34 01 10 00 9B 39 00 00 34 12 00 68 1A 67 38 00 A0 09 02 00 00 00 00 00 C2 39 00 00 6A 12 00 E2 18 8E 3B 00 10 FE 02 00 00 00 00 00 FD 39 00 00 AD 12 00 C9 1A C8 3B 00 20 C5 02 00 00 00 00 00 0B 3A 00 00 BF 12 00 87 1B 77 38 00 FC 4E 02 00 00 00 00 00 BC 39 00 00 5F 12 00 A9 1B 88 39 00 00 00 01 00 00 00 00 00 B1 39 00 00 4E 12 00 A8 1A D7 37 00 20 0F 02 00 00 00 00 00 EB 39 00 00 96 12 00 34 1A B7 33 00 20 40 02 00 00 00 00 00 16 3A 00 00 CA 12 00 C8 1B 37 38 00 F8 F8 02 00 00 00 00 00 9F 39 00 00 38 12 00 F8 1E 97 36 00 48 52 02 00 00 00 00 00 A0 39 00 00 39 12 00 58 1F 07 36 00 F8 56 02 00 00 00 00 00 A1 39 00 00 3A 12 00 58 20 07 36 00 00 71 02 00 00 00 00 00 A2 39 00 00 3B 12 00 98 1C C7 37 00 18 31 02 00 00 00 00 00 A3 39 00 00 3C 12 00 D8 1E C7 35 00 68 55 02 00 00 00 00 00 A4 39 00 00 3D 12 00 B8 20 E7 36 00 30 69 02 00 00 00 00 00 A5 39 00 00 3E 12 00 B8 1F 17 37 00 20 61 02 00 00 00 00 00 FF 39 00 00 AF 12 00 E9 1D E8 38 00 C4 40 02 00 00 00 00 00
    }

}
